//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 14.0.23107.0
// 
namespace HappyWorkEveryday.AttendanceWebService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MsdnUser", Namespace="http://schemas.datacontract.org/2004/07/AttendanceWCF")]
    public partial class MsdnUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AliasField;
        
        private int IdField;
        
        private int IsCheckOutField;
        
        private int IsTraineeField;
        
        private string NameField;
        
        private int TeamIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alias {
            get {
                return this.AliasField;
            }
            set {
                if ((object.ReferenceEquals(this.AliasField, value) != true)) {
                    this.AliasField = value;
                    this.RaisePropertyChanged("Alias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsCheckOut {
            get {
                return this.IsCheckOutField;
            }
            set {
                if ((this.IsCheckOutField.Equals(value) != true)) {
                    this.IsCheckOutField = value;
                    this.RaisePropertyChanged("IsCheckOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsTrainee {
            get {
                return this.IsTraineeField;
            }
            set {
                if ((this.IsTraineeField.Equals(value) != true)) {
                    this.IsTraineeField = value;
                    this.RaisePropertyChanged("IsTrainee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeamId {
            get {
                return this.TeamIdField;
            }
            set {
                if ((this.TeamIdField.Equals(value) != true)) {
                    this.TeamIdField = value;
                    this.RaisePropertyChanged("TeamId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchType", Namespace="http://schemas.datacontract.org/2004/07/AttendanceWCF")]
    public enum SearchType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Alias = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Detail", Namespace="http://schemas.datacontract.org/2004/07/AttendanceWCF")]
    public partial class Detail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AliasField;
        
        private System.DateTime EndTimeField;
        
        private string EnglishNameField;
        
        private int IdField;
        
        private int IsApprovedField;
        
        private string LeaveTypeField;
        
        private string MyBackUpField;
        
        private string ReasonField;
        
        private System.DateTime StartTimeField;
        
        private double TotalTimeField;
        
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alias {
            get {
                return this.AliasField;
            }
            set {
                if ((object.ReferenceEquals(this.AliasField, value) != true)) {
                    this.AliasField = value;
                    this.RaisePropertyChanged("Alias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishName {
            get {
                return this.EnglishNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EnglishNameField, value) != true)) {
                    this.EnglishNameField = value;
                    this.RaisePropertyChanged("EnglishName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsApproved {
            get {
                return this.IsApprovedField;
            }
            set {
                if ((this.IsApprovedField.Equals(value) != true)) {
                    this.IsApprovedField = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LeaveType {
            get {
                return this.LeaveTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LeaveTypeField, value) != true)) {
                    this.LeaveTypeField = value;
                    this.RaisePropertyChanged("LeaveType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MyBackUp {
            get {
                return this.MyBackUpField;
            }
            set {
                if ((object.ReferenceEquals(this.MyBackUpField, value) != true)) {
                    this.MyBackUpField = value;
                    this.RaisePropertyChanged("MyBackUp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalTime {
            get {
                return this.TotalTimeField;
            }
            set {
                if ((this.TotalTimeField.Equals(value) != true)) {
                    this.TotalTimeField = value;
                    this.RaisePropertyChanged("TotalTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/AttendanceWCF")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AliasField;
        
        private string EnglishNameField;
        
        private int MsdnIdField;
        
        private double OverTimeField;
        
        private int RoleIdField;
        
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alias {
            get {
                return this.AliasField;
            }
            set {
                if ((object.ReferenceEquals(this.AliasField, value) != true)) {
                    this.AliasField = value;
                    this.RaisePropertyChanged("Alias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishName {
            get {
                return this.EnglishNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EnglishNameField, value) != true)) {
                    this.EnglishNameField = value;
                    this.RaisePropertyChanged("EnglishName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MsdnId {
            get {
                return this.MsdnIdField;
            }
            set {
                if ((this.MsdnIdField.Equals(value) != true)) {
                    this.MsdnIdField = value;
                    this.RaisePropertyChanged("MsdnId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OverTime {
            get {
                return this.OverTimeField;
            }
            set {
                if ((this.OverTimeField.Equals(value) != true)) {
                    this.OverTimeField = value;
                    this.RaisePropertyChanged("OverTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AttendanceWebService.IAttendanceService")]
    public interface IAttendanceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttendanceService/GetAllMsdnUsers", ReplyAction="http://tempuri.org/IAttendanceService/GetAllMsdnUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<HappyWorkEveryday.AttendanceWebService.MsdnUser>> GetAllMsdnUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttendanceService/GetAllLeaveRecoder", ReplyAction="http://tempuri.org/IAttendanceService/GetAllLeaveRecoderResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<HappyWorkEveryday.AttendanceWebService.Detail>> GetAllLeaveRecoderAsync(HappyWorkEveryday.AttendanceWebService.SearchType type, string alias);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttendanceService/GetAllUsers", ReplyAction="http://tempuri.org/IAttendanceService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<HappyWorkEveryday.AttendanceWebService.User>> GetAllUsersAsync(HappyWorkEveryday.AttendanceWebService.SearchType type, string alias);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAttendanceServiceChannel : HappyWorkEveryday.AttendanceWebService.IAttendanceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AttendanceServiceClient : System.ServiceModel.ClientBase<HappyWorkEveryday.AttendanceWebService.IAttendanceService>, HappyWorkEveryday.AttendanceWebService.IAttendanceService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public AttendanceServiceClient() : 
                base(AttendanceServiceClient.GetDefaultBinding(), AttendanceServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IAttendanceService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AttendanceServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(AttendanceServiceClient.GetBindingForEndpoint(endpointConfiguration), AttendanceServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AttendanceServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AttendanceServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AttendanceServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AttendanceServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AttendanceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<HappyWorkEveryday.AttendanceWebService.MsdnUser>> GetAllMsdnUsersAsync() {
            return base.Channel.GetAllMsdnUsersAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<HappyWorkEveryday.AttendanceWebService.Detail>> GetAllLeaveRecoderAsync(HappyWorkEveryday.AttendanceWebService.SearchType type, string alias) {
            return base.Channel.GetAllLeaveRecoderAsync(type, alias);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<HappyWorkEveryday.AttendanceWebService.User>> GetAllUsersAsync(HappyWorkEveryday.AttendanceWebService.SearchType type, string alias) {
            return base.Channel.GetAllUsersAsync(type, alias);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IAttendanceService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IAttendanceService)) {
                return new System.ServiceModel.EndpointAddress("http://10.168.172.218:8095/AttendanceService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return AttendanceServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IAttendanceService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return AttendanceServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IAttendanceService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IAttendanceService,
        }
    }
}
