//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HappyWorkService
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AttendanceEntities : DbContext
    {
        public AttendanceEntities()
            : base("name=AttendanceEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Tb_AdminLog> Tb_AdminLog { get; set; }
        public virtual DbSet<Tb_Detail> Tb_Detail { get; set; }
        public virtual DbSet<Tb_MSDNUser> Tb_MSDNUser { get; set; }
        public virtual DbSet<Tb_Role> Tb_Role { get; set; }
        public virtual DbSet<Tb_TeamInfo> Tb_TeamInfo { get; set; }
        public virtual DbSet<Tb_Technology> Tb_Technology { get; set; }
        public virtual DbSet<Tb_User> Tb_User { get; set; }
    
        public virtual int AddNewUserForOverTime(string alias, string englishName, Nullable<double> overtime, Nullable<int> roleId)
        {
            var aliasParameter = alias != null ?
                new ObjectParameter("alias", alias) :
                new ObjectParameter("alias", typeof(string));
    
            var englishNameParameter = englishName != null ?
                new ObjectParameter("englishName", englishName) :
                new ObjectParameter("englishName", typeof(string));
    
            var overtimeParameter = overtime.HasValue ?
                new ObjectParameter("overtime", overtime) :
                new ObjectParameter("overtime", typeof(double));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddNewUserForOverTime", aliasParameter, englishNameParameter, overtimeParameter, roleIdParameter);
        }
    }
}
